@model AttendanceSystem118.Models.Student

@{
    ViewData["Title"] = Model.Name + " - Profile";
    
    var totalClasses = Model.Attendances.Count;
    var presentClasses = Model.Attendances.Count(a => a.IsPresent);
    var absentClasses = totalClasses - presentClasses;
    var attendancePercentage = totalClasses > 0 ? (double)presentClasses / totalClasses * 100 : 0;
    
    var recentAttendances = Model.Attendances
        .OrderByDescending(a => a.Date)
        .Take(10)
        .ToList();
}

<div class="profile-container">
    <div class="profile-header">
        <div class="profile-avatar-large">
            @Model.Name.Substring(0, 1).ToUpper()
        </div>
        <div class="profile-info">
            <h1>@Model.Name</h1>
            <p class="enrollment">@Model.EnrollmentNumber</p>
            <div class="profile-meta">
                @if (!string.IsNullOrEmpty(Model.Email))
                {
                    <span>
                        <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                            <path d="M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z"></path>
                            <polyline points="22,6 12,13 2,6"></polyline>
                        </svg>
                        @Model.Email
                    </span>
                }
                @if (!string.IsNullOrEmpty(Model.Phone))
                {
                    <span>
                        <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                            <path d="M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"></path>
                        </svg>
                        @Model.Phone
                    </span>
                }
            </div>
            <div class="profile-class">
                <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                    <path d="M4 19.5A2.5 2.5 0 0 1 6.5 17H20"></path>
                    <path d="M6.5 2H20v20H6.5A2.5 2.5 0 0 1 4 19.5v-15A2.5 2.5 0 0 1 6.5 2z"></path>
                </svg>
                @Model.Class.Name - @Model.Class.Subject
            </div>
        </div>
        <a asp-controller="Class" asp-action="Details" asp-route-id="@Model.ClassId" class="btn btn-secondary">Back to Class</a>
    </div>
    
    <div class="attendance-overview">
        <div class="attendance-circle">
            <svg viewBox="0 0 200 200">
                <circle cx="100" cy="100" r="90" fill="none" stroke="#e0e0e0" stroke-width="20"></circle>
                <circle cx="100" cy="100" r="90" fill="none" stroke="#4caf50" stroke-width="20" 
                        stroke-dasharray="@(565.48 * attendancePercentage / 100) 565.48" 
                        transform="rotate(-90 100 100)" 
                        stroke-linecap="round"></circle>
            </svg>
            <div class="attendance-text">
                <div class="percentage">@attendancePercentage.ToString("F1")%</div>
                <div class="label">Attendance</div>
            </div>
        </div>
        
        <div class="attendance-stats">
            <div class="stat-item">
                <div class="stat-icon" style="background: #e8f5e9;">
                    <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="#4caf50" stroke-width="2">
                        <polyline points="20 6 9 17 4 12"></polyline>
                    </svg>
                </div>
                <div>
                    <div class="stat-number">@presentClasses</div>
                    <div class="stat-label">Present</div>
                </div>
            </div>
            
            <div class="stat-item">
                <div class="stat-icon" style="background: #ffebee;">
                    <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="#f44336" stroke-width="2">
                        <line x1="18" y1="6" x2="6" y2="18"></line>
                        <line x1="6" y1="6" x2="18" y2="18"></line>
                    </svg>
                </div>
                <div>
                    <div class="stat-number">@absentClasses</div>
                    <div class="stat-label">Absent</div>
                </div>
            </div>
            
            <div class="stat-item">
                <div class="stat-icon" style="background: #e3f2fd;">
                    <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="#2196f3" stroke-width="2">
                        <rect x="3" y="4" width="18" height="18" rx="2" ry="2"></rect>
                        <line x1="16" y1="2" x2="16" y2="6"></line>
                        <line x1="8" y1="2" x2="8" y2="6"></line>
                        <line x1="3" y1="10" x2="21" y2="10"></line>
                    </svg>
                </div>
                <div>
                    <div class="stat-number">@totalClasses</div>
                    <div class="stat-label">Total Classes</div>
                </div>
            </div>
        </div>
    </div>
    
    @if (recentAttendances.Any())
    {
        <div class="recent-attendance">
            <h2>Recent Attendance</h2>
            <div class="attendance-timeline">
                @foreach (var attendance in recentAttendances)
                {
                    <div class="timeline-item @(attendance.IsPresent ? "present" : "absent")">
                        <div class="timeline-marker"></div>
                        <div class="timeline-content">
                            <div class="timeline-date">@attendance.Date.ToString("MMMM dd, yyyy")</div>
                            <div class="timeline-status">
                                @if (attendance.IsPresent)
                                {
                                    <span class="status-badge status-present">Present</span>
                                }
                                else
                                {
                                    <span class="status-badge status-absent">Absent</span>
                                }
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    }
    else
    {
        <div class="empty-state">
            <svg width="64" height="64" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1.5">
                <rect x="3" y="4" width="18" height="18" rx="2" ry="2"></rect>
                <line x1="16" y1="2" x2="16" y2="6"></line>
                <line x1="8" y1="2" x2="8" y2="6"></line>
                <line x1="3" y1="10" x2="21" y2="10"></line>
            </svg>
            <h2>No Attendance Records</h2>
            <p>Attendance hasn't been marked for this student yet</p>
        </div>
    }
</div>